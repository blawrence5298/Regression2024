# Get names of all variables from the model formula
all_vars <- all.vars(formula(lm_model))
# Get names of predictors from the model formula (exclude the response variable)
predictors <- all_vars[all_vars != response_var]
pred_data <- model_data[predictors]
# Attempt to convert factors to numeric if not already
for(col in colnames(pred_data)) {
if(is.factor(pred_data[[col]])) {
pred_data[[col]] <- as.numeric(as.factor(pred_data[[col]]))
}
}
cor_matrix <- cor(pred_data, use = "complete.obs")  # using complete cases
return(cor_matrix)
}
source("setup.R")
source("setup.R")
math_perf <- read.csv("student-mat.csv", sep=";")
port_perf <- read.csv("student-por.csv", sep=";")
# Factor these data columns
fcols <- c('school', 'sex', 'age', 'address', 'famsize', 'Pstatus', 'Medu', 'Fedu', 'Mjob', 'Fjob', 'traveltime', 'studytime', 'reason', 'guardian', 'schoolsup', 'famsup', 'paid', 'failures', 'activities', 'nursery', 'higher', 'internet', 'romantic', 'famrel', 'freetime', 'goout', 'Dalc', 'Walc', 'health')
# Factorize columns in both dataframes
math_perf[fcols] <- lapply(math_perf[fcols], factor)
port_perf[fcols] <- lapply(port_perf[fcols], factor)  # Corrected this line
# Transform absences - Log transformation to handle skewness
math_perf$absences <- log(math_perf$absences + 1)
port_perf$absences <- log(port_perf$absences + 1)
#head(math_perf)
#head(port_perf)
p1 <- gg_basic(math_perf,G2,G3)
p2 <- gg_basic(port_perf,G2,G3)
p3 <- gg_basic(math_perf,G1,G3)
p4 <- gg_basic(port_perf,G1,G3)
grid.arrange(p1, p2,p3, p4, ncol=2, nrow=2)
p5 <- gg_basic(math_perf,absences,G3)
p6 <- gg_basic(port_perf,absences,G3)
p7 <- gg_basic(math_perf,failures,G3)
p8 <- gg_basic(port_perf,failures,G3)
grid.arrange(p5, p6, p7, p8, ncol=2, nrow=2)
lm1 <- lm(G3 ~ G2, data = math_perf)
summary(lm1)
lm_diag(lm1)
lm2 <- lm(G3 ~ G2, data = port_perf)
summary(lm2)
lm_diag(lm2)
lm3 <- lm(G3 ~ G1, data = math_perf)
summary(lm3)
lm_diag(lm3)
lm4 <- lm(G3 ~ G1, data = port_perf)
summary(lm4)
lm_diag(lm4)
lm5 <- lm(G3 ~ absences, data=math_perf)
summary(lm5)
lm6 <- lm(G3 ~ absences, data=port_perf)
summary(lm6)
lm7 <- lm(G3 ~ failures, data=math_perf)
summary(lm7)
lm8 <- lm(G3 ~ failures, data=port_perf)
summary(lm8)
lm_full_math <- lm(G3 ~ . , data=math_perf)
#Omitted for brevity
#summary(lm_full_math)
lm_full_port <- lm(G3 ~ ., data=port_perf)
#Omitted for brevity
#summary(lm_full_port)
lm_diag(lm_full_math)
lm_diag(lm_full_port)
#Commented Out for Brevity
#lm9 <- step(lm_full_math)
#Significant predictors
#schoolsup, romantic, health
#activities, famrel, failures
#G1, absences, G2
#Commented Out for Brevity
#lm10 <- step(lm_full_port)
#Significant predictors
#goout, address, reason
#Dalc, sex, traveltime
#failures, absences, G1, G2
lm11 <- lm(G3 ~ schoolsup + romantic + health + activities + famrel + failures + G1 + absences + G2, data = math_perf)
summary(lm11)
lm12 <- lm(G3 ~ goout + address + reason + Dalc + sex + traveltime + failures + absences + G1 + G2, data = port_perf)
summary(lm12)
lm13 <- lm(G3 ~ activities + failures + absences + G1 + G2, data = math_perf)
summary(lm13)
lm14 <- lm(G3 ~ reason + Dalc + failures + absences + G1 + G2, data = port_perf)
summary(lm13)
lm_diag(lm13)
lm_diag(lm14)
cor_matrix(lm13)
lm15 <- lm(G3 ~ activities + failures + absences + G2, data = math_perf)
lm_diag(lm15)
lm16 <- lm(G3 ~ reason + Dalc + failures + absences + G2, data = port_perf)
lm_diag(lm16)
suppressMessages(source("setup.R"))
math_perf <- read.csv("student-mat.csv", sep=";")
port_perf <- read.csv("student-por.csv", sep=";")
# Factor these data columns
fcols <- c('school', 'sex', 'age', 'address', 'famsize', 'Pstatus', 'Medu', 'Fedu', 'Mjob', 'Fjob', 'traveltime', 'studytime', 'reason', 'guardian', 'schoolsup', 'famsup', 'paid', 'failures', 'activities', 'nursery', 'higher', 'internet', 'romantic', 'famrel', 'freetime', 'goout', 'Dalc', 'Walc', 'health')
# Factorize columns in both dataframes
math_perf[fcols] <- lapply(math_perf[fcols], factor)
port_perf[fcols] <- lapply(port_perf[fcols], factor)  # Corrected this line
# Transform absences - Log transformation to handle skewness
math_perf$absences <- log(math_perf$absences + 1)
port_perf$absences <- log(port_perf$absences + 1)
#head(math_perf)
#head(port_perf)
p1 <- gg_basic(math_perf,G2,G3)
p2 <- gg_basic(port_perf,G2,G3)
p3 <- gg_basic(math_perf,G1,G3)
p4 <- gg_basic(port_perf,G1,G3)
grid.arrange(p1, p2,p3, p4, ncol=2, nrow=2)
p5 <- gg_basic(math_perf,absences,G3)
p6 <- gg_basic(port_perf,absences,G3)
p7 <- gg_basic(math_perf,failures,G3)
p8 <- gg_basic(port_perf,failures,G3)
grid.arrange(p5, p6, p7, p8, ncol=2, nrow=2)
lm1 <- lm(G3 ~ G2, data = math_perf)
summary(lm1)
lm_diag(lm1)
lm2 <- lm(G3 ~ G2, data = port_perf)
summary(lm2)
lm_diag(lm2)
lm3 <- lm(G3 ~ G1, data = math_perf)
summary(lm3)
lm_diag(lm3)
lm4 <- lm(G3 ~ G1, data = port_perf)
summary(lm4)
lm_diag(lm4)
lm5 <- lm(G3 ~ absences, data=math_perf)
summary(lm5)
lm6 <- lm(G3 ~ absences, data=port_perf)
summary(lm6)
lm7 <- lm(G3 ~ failures, data=math_perf)
summary(lm7)
lm8 <- lm(G3 ~ failures, data=port_perf)
summary(lm8)
lm_full_math <- lm(G3 ~ . , data=math_perf)
#Omitted for brevity
#summary(lm_full_math)
lm_full_port <- lm(G3 ~ ., data=port_perf)
#Omitted for brevity
#summary(lm_full_port)
lm_diag(lm_full_math)
lm_diag(lm_full_port)
#Commented Out for Brevity
#lm9 <- step(lm_full_math)
#Significant predictors
#schoolsup, romantic, health
#activities, famrel, failures
#G1, absences, G2
#Commented Out for Brevity
#lm10 <- step(lm_full_port)
#Significant predictors
#goout, address, reason
#Dalc, sex, traveltime
#failures, absences, G1, G2
lm11 <- lm(G3 ~ schoolsup + romantic + health + activities + famrel + failures + G1 + absences + G2, data = math_perf)
summary(lm11)
lm12 <- lm(G3 ~ goout + address + reason + Dalc + sex + traveltime + failures + absences + G1 + G2, data = port_perf)
summary(lm12)
lm13 <- lm(G3 ~ activities + failures + absences + G1 + G2, data = math_perf)
summary(lm13)
lm14 <- lm(G3 ~ reason + Dalc + failures + absences + G1 + G2, data = port_perf)
summary(lm13)
lm_diag(lm13)
lm_diag(lm14)
cor_matrix(lm13)
lm15 <- lm(G3 ~ activities + failures + absences + G2, data = math_perf)
lm_diag(lm15)
lm16 <- lm(G3 ~ reason + Dalc + failures + absences + G2, data = port_perf)
lm_diag(lm16)
#Relevant libraries
library(ggplot2)
library(plotly)
library(grid)
library(gridExtra)
#Custom functions to avoid redundant coding
#Creates basic scatter plots
gg_basic <- function(data, x, y) {
plot <- ggplot(data = data, aes(x = {{x}}, y = {{y}})) +
geom_point()
return(plot)
}
#Creates a 2x2 grid of basic diagnostic plots of a lm object
lm_diag <- function(lm_model) {
p1 <- gg_basic(lm_model$model, fitted(lm_model), residuals(lm_model)) +
labs(x="Fitted Values", y="Residuals")
p2 <- gg_basic(lm_model$model, fitted(lm_model), rstandard(lm_model)) +
labs(x="Fitted Values", y="Standardized Residuals")
p3 <- gg_basic(lm_model$model, fitted(lm_model), hatvalues(lm_model)) +
labs(x="Fitted Values", y="Leverage")
# Create QQ plot of standardized residuals
p4 <- ggplot(lm_model$model, aes(sample = rstandard(lm_model))) +
stat_qq() +
stat_qq_line(colour="red") +
labs(x ="Theoretical Quantiles", y="Sample Quantiles") +
ggtitle("QQ Plot of Standardized Residuals")
# Arrange all plots into a grid
return(grid.arrange(p1, p2, p3, p4, ncol=2, nrow=2))
}
#Creates a correlation matrix for predictors in a lm model
cor_matrix_from_lm <- function(lm_model) {
model_data <- lm_model$model
# Get names of all variables from the model formula
all_vars <- all.vars(formula(lm_model))
# Get names of predictors from the model formula (exclude the response variable)
predictors <- all_vars[all_vars != response_var]
pred_data <- model_data[predictors]
# Attempt to convert factors to numeric if not already
for(col in colnames(pred_data)) {
if(is.factor(pred_data[[col]])) {
pred_data[[col]] <- as.numeric(as.factor(pred_data[[col]]))
}
}
cor_matrix <- cor(pred_data, use = "complete.obs")  # using complete cases
return(cor_matrix)
}
lm5 <- lm(G3 ~ absences, data=math_perf)
summary(lm5)
lm6 <- lm(G3 ~ absences, data=port_perf)
summary(lm6)
p5 <- gg_basic(math_perf,absences,G3)
p6 <- gg_basic(port_perf,absences,G3)
p7 <- gg_basic(math_perf,failures,G3)
p8 <- gg_basic(port_perf,failures,G3)
grid.arrange(p5, p6, p7, p8, ncol=2, nrow=2)
p5 <- gg_basic(math_perf,absences,G3)
p6 <- gg_basic(port_perf,absences,G3)
p7 <- gg_basic(math_perf,failures,G3)
p8 <- gg_basic(port_perf,failures,G3)
grid.arrange(p5, p6, p7, p8, ncol=2, nrow=2)
p1 <- gg_basic(math_perf,G2,G3)
p2 <- gg_basic(port_perf,G2,G3)
p3 <- gg_basic(math_perf,G1,G3)
p4 <- gg_basic(port_perf,G1,G3)
grid.arrange(p1, p2,p3, p4, ncol=2, nrow=2)
suppressMessages(source("setup.R"))
math_perf <- read.csv("student-mat.csv", sep=";")
port_perf <- read.csv("student-por.csv", sep=";")
# Factor these data columns
fcols <- c('school', 'sex', 'age', 'address', 'famsize', 'Pstatus', 'Medu', 'Fedu', 'Mjob', 'Fjob', 'traveltime', 'studytime', 'reason', 'guardian', 'schoolsup', 'famsup', 'paid', 'failures', 'activities', 'nursery', 'higher', 'internet', 'romantic', 'famrel', 'freetime', 'goout', 'Dalc', 'Walc', 'health')
# Factorize columns in both dataframes
math_perf[fcols] <- lapply(math_perf[fcols], factor)
port_perf[fcols] <- lapply(port_perf[fcols], factor)  # Corrected this line
# Transform absences - Log transformation to handle skewness
math_perf$absences <- log(math_perf$absences + 1)
port_perf$absences <- log(port_perf$absences + 1)
#head(math_perf)
#head(port_perf)
p1 <- gg_basic(math_perf,G2,G3)
p2 <- gg_basic(port_perf,G2,G3)
p3 <- gg_basic(math_perf,G1,G3)
p4 <- gg_basic(port_perf,G1,G3)
grid.arrange(p1, p2,p3, p4, ncol=2, nrow=2)
p5 <- gg_basic(math_perf,absences,G3)
p6 <- gg_basic(port_perf,absences,G3)
p7 <- gg_basic(math_perf,failures,G3)
p8 <- gg_basic(port_perf,failures,G3)
grid.arrange(p5, p6, p7, p8, ncol=2, nrow=2)
lm1 <- lm(G3 ~ G2, data = math_perf)
summary(lm1)
lm_diag(lm1)
lm2 <- lm(G3 ~ G2, data = port_perf)
summary(lm2)
lm_diag(lm2)
lm3 <- lm(G3 ~ G1, data = math_perf)
summary(lm3)
lm_diag(lm3)
lm4 <- lm(G3 ~ G1, data = port_perf)
summary(lm4)
lm_diag(lm4)
lm5 <- lm(G3 ~ absences, data=math_perf)
summary(lm5)
lm6 <- lm(G3 ~ absences, data=port_perf)
summary(lm6)
lm7 <- lm(G3 ~ failures, data=math_perf)
summary(lm7)
lm8 <- lm(G3 ~ failures, data=port_perf)
summary(lm8)
lm_full_math <- lm(G3 ~ . , data=math_perf)
#Omitted for brevity
#summary(lm_full_math)
lm_full_port <- lm(G3 ~ ., data=port_perf)
#Omitted for brevity
#summary(lm_full_port)
lm_diag(lm_full_math)
lm_diag(lm_full_port)
#Commented Out for Brevity
#lm9 <- step(lm_full_math)
#Significant predictors
#schoolsup, romantic, health
#activities, famrel, failures
#G1, absences, G2
#Commented Out for Brevity
#lm10 <- step(lm_full_port)
#Significant predictors
#goout, address, reason
#Dalc, sex, traveltime
#failures, absences, G1, G2
lm11 <- lm(G3 ~ schoolsup + romantic + health + activities + famrel + failures + G1 + absences + G2, data = math_perf)
summary(lm11)
lm12 <- lm(G3 ~ goout + address + reason + Dalc + sex + traveltime + failures + absences + G1 + G2, data = port_perf)
summary(lm12)
lm13 <- lm(G3 ~ activities + failures + absences + G1 + G2, data = math_perf)
summary(lm13)
lm14 <- lm(G3 ~ reason + Dalc + failures + absences + G1 + G2, data = port_perf)
summary(lm13)
lm_diag(lm13)
lm_diag(lm14)
cor_matrix(lm13)
lm15 <- lm(G3 ~ activities + failures + absences + G2, data = math_perf)
lm_diag(lm15)
lm16 <- lm(G3 ~ reason + Dalc + failures + absences + G2, data = port_perf)
lm_diag(lm16)
#Relevant libraries
library(ggplot2)
library(plotly)
library(grid)
library(gridExtra)
#Custom functions to avoid redundant coding
#Creates basic scatter plots
gg_basic <- function(data, x, y) {
plot <- ggplot(data = data, aes(x = {{x}}, y = {{y}})) +
geom_point()
return(plot)
}
#Creates a 2x2 grid of basic diagnostic plots of a lm object
lm_diag <- function(lm_model) {
p1 <- gg_basic(lm_model$model, fitted(lm_model), residuals(lm_model)) +
labs(x="Fitted Values", y="Residuals")
p2 <- gg_basic(lm_model$model, fitted(lm_model), rstandard(lm_model)) +
labs(x="Fitted Values", y="Standardized Residuals")
p3 <- gg_basic(lm_model$model, fitted(lm_model), hatvalues(lm_model)) +
labs(x="Fitted Values", y="Leverage")
# Create QQ plot of standardized residuals
p4 <- ggplot(lm_model$model, aes(sample = rstandard(lm_model))) +
stat_qq() +
stat_qq_line(colour="red") +
labs(x ="Theoretical Quantiles", y="Sample Quantiles") +
ggtitle("QQ Plot of Standardized Residuals")
# Arrange all plots into a grid
return(grid.arrange(p1, p2, p3, p4, ncol=2, nrow=2))
}
#Creates a correlation matrix for predictors in a lm model
cor_matrix_from_lm <- function(lm_model) {
model_data <- lm_model$model
# Get names of all variables from the model formula
all_vars <- all.vars(formula(lm_model))
# Get names of predictors from the model formula (exclude the response variable)
predictors <- all_vars[all_vars != response_var]
pred_data <- model_data[predictors]
# Attempt to convert factors to numeric if not already
for(col in colnames(pred_data)) {
if(is.factor(pred_data[[col]])) {
pred_data[[col]] <- as.numeric(as.factor(pred_data[[col]]))
}
}
cor_matrix <- cor(pred_data, use = "complete.obs")  # using complete cases
return(cor_matrix)
}
p5 <- gg_basic(math_perf,absences,G3)
p6 <- gg_basic(port_perf,absences,G3)
p7 <- gg_basic(math_perf,failures,G3)
p8 <- gg_basic(port_perf,failures,G3)
grid.arrange(p5, p6, p7, p8, ncol=2, nrow=2)
suppressMessages(source("setup.R"))
math_perf <- read.csv("student-mat.csv", sep=";")
port_perf <- read.csv("student-por.csv", sep=";")
# Factor these data columns
fcols <- c('school', 'sex', 'age', 'address', 'famsize', 'Pstatus', 'Medu', 'Fedu', 'Mjob', 'Fjob', 'traveltime', 'studytime', 'reason', 'guardian', 'schoolsup', 'famsup', 'paid', 'failures', 'activities', 'nursery', 'higher', 'internet', 'romantic', 'famrel', 'freetime', 'goout', 'Dalc', 'Walc', 'health')
# Factorize columns in both dataframes
math_perf[fcols] <- lapply(math_perf[fcols], factor)
port_perf[fcols] <- lapply(port_perf[fcols], factor)  # Corrected this line
# Transform absences - Log transformation to handle skewness
math_perf$absences <- log(math_perf$absences + 1)
port_perf$absences <- log(port_perf$absences + 1)
#head(math_perf)
#head(port_perf)
p1 <- gg_basic(math_perf,G2,G3)
p2 <- gg_basic(port_perf,G2,G3)
p3 <- gg_basic(math_perf,G1,G3)
p4 <- gg_basic(port_perf,G1,G3)
grid.arrange(p1, p2,p3, p4, ncol=2, nrow=2)
suppressMessages(source("setup.R"))
p5 <- gg_basic(math_perf,absences,G3)
p6 <- gg_basic(port_perf,absences,G3)
p7 <- gg_basic(math_perf,failures,G3)
p8 <- gg_basic(port_perf,failures,G3)
grid.arrange(p5, p6, p7, p8, ncol=2, nrow=2)
lm7 <- lm(G3 ~ failures, data=math_perf)
summary(lm7)$coefficients
lm8 <- lm(G3 ~ failures, data=port_perf)
summary(lm8)$coefficients
lm7 <- lm(G3 ~ failures, data=math_perf)
summary(lm7)$coefficients
lm8 <- lm(G3 ~ failures, data=port_perf)
summary(lm8)$coefficients
lm_diag(lm7)
lm_diag(lm8)
lm7 <- lm(G3 ~ failures, data=math_perf)
summary(lm7)$coefficients
lm8 <- lm(G3 ~ failures, data=port_perf)
summary(lm8)$coefficients
lm_diag(lm7)
lm_diag(lm8)
lm15 <- lm(G3 ~ activities + failures + absences + G2, data = math_perf)
summary(lm15)$coefficients
lm_diag(lm15)
lm16 <- lm(G3 ~ reason + Dalc + failures + absences + G2, data = port_perf)
summary(lm16)$coefficients
lm_diag(lm16)
suppressMessages(source("setup.R"))
lm15 <- lm(G3 ~ activities + failures + absences + G2, data = math_perf)
summary(lm15)$coefficients
lm_diag(lm15)
lm16 <- lm(G3 ~ reason + Dalc + failures + absences + G2, data = port_perf)
summary(lm16)$coefficients
lm_diag(lm16)
lm15 <- lm(G3 ~ activities + failures + absences + G2, data = math_perf)
summary(lm15)$coefficients
lm_diag(lm15)
shapiro.test(rstandard(lm15))
lm16 <- lm(G3 ~ reason + Dalc + failures + absences + G2, data = port_perf)
summary(lm16)$coefficients
lm_diag(lm16)
shapiro.test(rstandard(lm16))
suppressMessages(source("setup.R"))
lm1 <- lm(G3 ~ G2, data = math_perf)
summary(lm1)$coefficients
lm_diag(lm1)
lm2 <- lm(G3 ~ G2, data = port_perf)
summary(lm2)$coefficients
lm_diag(lm2)
lm3 <- lm(G3 ~ G1, data = math_perf)
summary(lm3)$coefficients
lm_diag(lm3)
lm4 <- lm(G3 ~ G1, data = port_perf)
summary(lm4)$coefficients
lm_diag(lm4)
lm1 <- lm(G3 ~ G2, data = math_perf)
summary(lm1)$coefficients
lm_diag(lm1)
lm2 <- lm(G3 ~ G2, data = port_perf)
summary(lm2)$coefficients
lm_diag(lm2)
#lm3 <- lm(G3 ~ G1, data = math_perf)
#summary(lm3)$coefficients
#lm_diag(lm3)
#lm4 <- lm(G3 ~ G1, data = port_perf)
#summary(lm4)$coefficients
#lm_diag(lm4)
lm5 <- lm(G3 ~ absences, data=math_perf)
summary(lm5)$coefficients
lm6 <- lm(G3 ~ absences, data=port_perf)
summary(lm6)$coefficients
math_perf$G3bin <- math_perfG3>= 14
math_perf$g3bin <- math_perfg3>= 14
head(math_perf)
#log1 <- glm(math_perf)
math_perf <- data.frame(math_perf$G3>=14)
head(math_perf)
#log1 <- glm(math_perf)
math_perf$bin <- data.frame(math_perf$G3>=14)
math_perf$bin <- as.integer(math_perf$G3 >= 14)
math_perf$bin <- ifelse(math_perf$G3 >= 14, 1, 0)
math_perf$Pass <- math_perf$G3 >= 14
math_perf$Pass <- math_perf$G3 >= 14
math_perf$Pass <- math_perf$G3 >= 14
head(math_perf)
math_perf$Pass <- math_perf$G3 >= 14
math_perf <- read.csv("student-mat.csv", sep=";")
port_perf <- read.csv("student-por.csv", sep=";")
# Factor these data columns
fcols <- c('school', 'sex', 'age', 'address', 'famsize', 'Pstatus', 'Medu', 'Fedu', 'Mjob', 'Fjob', 'traveltime', 'studytime', 'reason', 'guardian', 'schoolsup', 'famsup', 'paid', 'failures', 'activities', 'nursery', 'higher', 'internet', 'romantic', 'famrel', 'freetime', 'goout', 'Dalc', 'Walc', 'health')
# Factorize columns in both dataframes
math_perf[fcols] <- lapply(math_perf[fcols], factor)
port_perf[fcols] <- lapply(port_perf[fcols], factor)  # Corrected this line
# Transform absences - Log transformation to handle skewness
math_perf$absences <- log(math_perf$absences + 1)
port_perf$absences <- log(port_perf$absences + 1)
#head(math_perf)
#head(port_perf)
head(math_perf)
math_perf$Pass <- math_perf$G3 >= 14
math_perf$Pass <- as.numeric(math_perf$Pass)
head(math_perf)
#log1 <- glm(math_perf)
head(math_perf)
math_perf$Pass <- math_perf$G3 >= 14
math_perf$Pass <- as.numeric(math_perf$Pass)
log1 <- glm(Pass ~ G2, data=math_perf, family="binomial")
head(math_perf)
math_perf$Pass <- math_perf$G3 >= 14
math_perf$Pass <- as.numeric(math_perf$Pass)
log1 <- glm(Pass ~ G2, data=math_perf, family="binomial")
ggplot(math_perf, aes(G2, Pass)) + geom_point() + geom_smooth(method="glm", method.args = list(family = "binomial"), se=F)
head(math_perf)
math_perf$Pass <- math_perf$G3 >= 14
math_perf$Pass <- as.numeric(math_perf$Pass)
log1 <- glm(Pass ~ G2, data=math_perf, family="binomial")
p1 <- ggplot(math_perf, aes(G2, Pass)) + geom_point() + geom_smooth(method="glm", method.args = list(family = "binomial"), se=F)
ggplotly(p1)
lm5 <- lm(G3 ~ absences, data=math_perf)
summary(lm5)$coefficients
lm6 <- lm(G3 ~ absences, data=port_perf)
summary(lm6)$coefficients
lm7 <- lm(G3 ~ failures, data=math_perf)
summary(lm7)$coefficients
lm8 <- lm(G3 ~ failures, data=port_perf)
summary(lm8)$coefficients
lm_diag(lm7)
lm_diag(lm8)
