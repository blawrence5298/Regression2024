---
title: "Midterm2"
author: Ben Lawrence
output: html_document
---

## Midterm 2

```{r}
suppressMessages(library(ggplot2))
suppressMessages(library(plotly))
library(MASS)
library(car)
library(gridExtra)
library(pROC)
```

```{r}
#Functions to quickly make diagnostics

#Creates basic scatter plots
gg_basic <- function(data, x, y) {
  plot <- ggplot(data = data, aes(x = {{x}}, y = {{y}})) + 
          geom_point()
  return(plot)
}

#Creates a 2x2 grid of basic diagnostic plots of a lm object
lm_diag <- function(lm_model) {
  p1 <- gg_basic(lm_model$model, fitted(lm_model), residuals(lm_model)) + 
    labs(x="Fitted Values", y="Residuals")
  p2 <- gg_basic(lm_model$model, fitted(lm_model), rstandard(lm_model)) +
    labs(x="Fitted Values", y="Standardized Residuals")
  p3 <- gg_basic(lm_model$model, fitted(lm_model), hatvalues(lm_model)) +
    labs(x="Fitted Values", y="Leverage")
  
  # Create QQ plot of standardized residuals
  p4 <- ggplot(lm_model$model, aes(sample = rstandard(lm_model))) +
        stat_qq() +
        stat_qq_line(colour="red") + 
        labs(x ="Theoretical Quantiles", y="Sample Quantiles") +
        ggtitle("QQ Plot of Standardized Residuals")

  # Arrange all plots into a grid
  return(grid.arrange(p1, p2, p3, p4, ncol=2, nrow=2))
}
```

1a) Create a variable age by adding 1.5 to rings and use age as the response varaible and all other variables (not including rings for predictors (additively), create a scatterplot matrix of the data and comment on the relationship among the varaibles

```{r}
snails <- read.csv("seasnails.csv")

#Create new variable age
snails$age <- snails$Rings + 1.5
head(snails)
```

```{r}
pairs(age ~ factor(Sex) + Length + Diameter + Height + Whole_weight 
      + Shucked_weight + Viscera_weight + Shell_weight, data=snails)
```

None of the predictors appear to have a linear relationship with the response. The argument could be made that Length and Diameter have a roughly linear relationship, but the apparent fanning out of points leads me to believe these variables will need transformations as well to produce a valid MLR model.

1b)

```{r}
#full model
lm_full <- lm(age ~ factor(Sex) + Length + Diameter + Height + Whole_weight 
      + Shucked_weight + Viscera_weight + Shell_weight, data=snails)
summary(lm_full)

boxcox(lm_full, lambda=seq(-0.36, -0.2, by = 0.05))
summary(powerTransform(lm_full))
```

The Box-Cox analysis indicates we are 95% confident t hat the value of $\lambda$ lies between $-0.36$ and $-0.2$. For the sake of intuition I will take lambda to be -0.3 and so the transformation will be $Y^{-0.3}=age^{-0.3}=\frac{1}{age^{0.3}}$

```{r}
lm_transformed <- lm((age)^(-0.3) ~ factor(Sex) + Length + Diameter + Height + Whole_weight + Shucked_weight + Viscera_weight + Shell_weight, data=snails)

summary(lm_transformed)
```

1c) I will use the step() function which uses Backwards Stepwise Selection to compare models according to their number of predictors and find the model with the lowest AIC criteria.

```{r}
lm_trimmed <- step(lm_transformed)
summary(lm_trimmed)
```

1d)

```{r}
#Plots of Residuals, Leverage, and QQ
lm_diag(lm_trimmed)
```

The residual plots seem to be skewed left, and exhibit a nonlinear pattern, calling into question the assumption of constant variance. Leverage seems fine, there are no high leverage points. Normality could be better, especially in the left side, but it does not obviously seem like a problem.

1e)

```{r}
new <- data.frame(Sex = "M", Length = 0.5, Diameter = 0.41, Height = 0.15, Whole_weight = 0.8, Shucked_weight = 0.4, Viscera_weight = 0.2, Shell_weight = 0.25)

predict(lm_trimmed, newdata = new, interval = "prediction")
```

The estimated age is then 0.49 years, or about 6 months.

2a)

```{r}
newss <- snails %>% filter(Sex != "I") %>% mutate(Sex = as.factor(Sex))
head(newss)

glm_full <- glm(Sex ~ . -age, data=newss, family=binomial)
summary(glm_full)
```

Age is, by definition, linearly related to Rings, so including both as predictors would lead to problems with multicollinearity in the model.

2b)

```{r}
glm_trimmed <- step(glm_full)
summary(glm_trimmed)
```

$$
\rm log\left(\frac{p(x)}{1-p(x)}\right)=\beta_0+\beta_1x+\cdots+\beta_px_p
$$

```{r}
ggplot(newss, aes(Shucked_weight, Sex)) + geom_point() + geom_smooth(method="glm", method.args = list(family = "binomial"), se=F)
```

For the predictor Shucked_weight, the sign tells me that as the shucked_weight increases the log odds of a snail being male will increase (assuming the order in the graph above matches 0 to 1). Conversely, the other predictors since they have negative signs I predict an increase in their values will lead to an increase in the log odds of a snail being female.

2c)

```{r}
log_new <- data.frame(Length = 0.5, Diameter = 0.41, Height = 0.15, Whole_weight = 0.8, Shucked_weight = 0.4, Viscera_weight = 0.2, Shell_weight = 0.25, Rings = 9)

predict(glm_trimmed, newdata = log_new, interval = "prediction")
```

The estimated probability of a snail being male is approximately 33.1%.

2d)

```{r}
help(roc_obj)
```

```{r}
probs <- predict(glm_trimmed, newdata = newss, type = "response")
roc_obj <- roc(newss$Sex, probs)
plot(1 - roc_obj$specificities, roc_obj$sensitivities, type="l",
     xlab="1 - Specificity", ylab = "Sensitivity")

abline(0,1,lty=2)

auc(roc_obj)
```

The ROC curve is not skewed much to the upper left, meaning our model is not much better at classifying than simply guessing. This is further supported by the AUC which is very close to 0.5 (0.5816). So our model is slightly better than just guessing, but not by much.
