#Load library to check install
library(ggplot2)
library(plotly)
library(ISLR)
#Check data
head(Auto)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ poly(x,2)) +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
fig1 <- ggplotly(p1)
fig1
model1 = lm(mpg ~ poly(horsepower,2), data = Auto)
summary(model1)
#Load library to check install
library(ggplot2)
library(plotly)
library(ISLR)
#Check data
head(Auto)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ poly(x,2)) +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
fig1 <- ggplotly(p1)
fig1
model1 = lm(mpg ~ poly(horsepower,2), data = Auto)
summary(model1)
#Load library to check install
library(ggplot2)
library(plotly)
library(ISLR)
#Check data
head(Auto)
#Load library to check install
library(ggplot2)
library(plotly)
library(ISLR)
#Check data
head(Auto)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ poly(x,2)) +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
fig1 <- ggplotly(p1)
fig1
#Load library to check install
library(ggplot2)
library(plotly)
library(ISLR)
#Check data
head(Auto)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ poly(x,2)) +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
fig1 <- ggplotly(p1)
fig1
#Load library to check install
library(ggplot2)
library(plotly)
library(ISLR)
#Check data
head(Auto)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
model1 = lm(mpg ~ poly(horsepower,2), data = Auto)
summary(model1)
predict(model1, newdata = data.frame(horsepower = 150), interval = "prediction")
p2 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
stat_smooth(method = 'lm',formula = y ~ poly(x,2))
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p2)
p3_data = data.frame(x = fitted(model1), y = rstandard(model1))
p3 <- ggplot(data = p3_data,aes(x, y)) +
geom_point() +
labs(x = "Fitted Values", y = "Standardized Residuals for Model 1", title="Residuals vs. Fitted Values") +
geom_hline(yintercept = 0, color = "red")
ggplotly(p3)
qqnorm(rstandard(model1))
qqline(rstandard(model1), col="red")
head(Carseats)
model2 = lm(Sales ~ Price + Urban + US, data = Carseats)
summary(model2)
contrasts(Carseats$US)
model3 = lm(Sales ~ Price + US, data = Carseats)
summary(model3)
#Load library to check install
library(ggplot2)
library(plotly)
library(ISLR)
#Check data
head(Auto)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
model1 = lm(mpg ~ poly(horsepower,2), data = Auto)
summary(model1)
predict(model1, newdata = data.frame(horsepower = 150), interval = "prediction")
p2 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
stat_smooth(method = 'lm',formula = y ~ poly(x,2))
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p2)
p3_data = data.frame(x = fitted(model1), y = rstandard(model1))
p3 <- ggplot(data = p3_data,aes(x, y)) +
geom_point() +
labs(x = "Fitted Values", y = "Standardized Residuals for Model 1", title="Residuals vs. Fitted Values") +
geom_hline(yintercept = 0, color = "red")
ggplotly(p3)
qqnorm(rstandard(model1))
qqline(rstandard(model1), col="red")
head(Carseats)
model2 = lm(Sales ~ Price + Urban + US, data = Carseats)
summary(model2)
contrasts(Carseats$US)
model3 = lm(Sales ~ Price + US, data = Carseats)
summary(model3)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
#Load library to check install
library(ggplot2)
library(plotly)
library(ISLR)
#Check data
head(Auto)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
#Load library to check install
library(ggplot2)
library(plotly)
library(ISLR)
#Check data
head(Auto)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
#Load library to check install
library(ggplot2)
library(plotly)
library(ISLR)
#Check data
head(Auto)
p1 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p1)
model1 = lm(mpg ~ poly(horsepower,2), data = Auto)
summary(model1)
predict(model1, newdata = data.frame(horsepower = 150), interval = "prediction")
p2 <- ggplot(data=Auto, aes(horsepower, mpg)) +
geom_point() +
stat_smooth(method = 'lm',formula = y ~ poly(x,2))
labs(title="MPG vs. Horsepower", x="Miles Per Gallon", y="Horsepower")
ggplotly(p2)
p3_data = data.frame(x = fitted(model1), y = rstandard(model1))
p3 <- ggplot(data = p3_data,aes(x, y)) +
geom_point() +
labs(x = "Fitted Values", y = "Standardized Residuals for Model 1", title="Residuals vs. Fitted Values") +
geom_hline(yintercept = 0, color = "red")
ggplotly(p3)
qqnorm(rstandard(model1))
qqline(rstandard(model1), col="red")
head(Carseats)
model2 = lm(Sales ~ Price + Urban + US, data = Carseats)
summary(model2)
contrasts(Carseats$US)
model3 = lm(Sales ~ Price + US, data = Carseats)
summary(model3)
model4 = lm(Sales ~ Price , data = Carseats)
summary(model4)
confint(model3)
